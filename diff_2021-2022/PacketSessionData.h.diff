diff --git a/2021/PacketSessionData.h b/2022/PacketSessionData.h
index b73b62b..84f673d 100755
--- a/2021/PacketSessionData.h
+++ b/2022/PacketSessionData.h
@@ -11,13 +11,14 @@ struct PacketSessionData
     uint8           m_sessionType;         	// 0 = unknown, 1 = P1, 2 = P2, 3 = P3, 4 = Short P
                                             	// 5 = Q1, 6 = Q2, 7 = Q3, 8 = Short Q, 9 = OSQ
                                             	// 10 = R, 11 = R2, 12 = R3, 13 = Time Trial
-    int8            m_trackId;         		// -1 for unknown, 0-21 for tracks, see appendix
+    int8            m_trackId;         		// -1 for unknown, see appendix
     uint8           m_formula;                  	// Formula, 0 = F1 Modern, 1 = F1 Classic, 2 = F2,
-                                                 // 3 = F1 Generic
+                                                 // 3 = F1 Generic, 4 = Beta, 5 = Supercars
+// 6 = Esports, 7 = F2 2021
     uint16          m_sessionTimeLeft;    	// Time left in session in seconds
     uint16          m_sessionDuration;     	// Session duration in seconds
     uint8           m_pitSpeedLimit;      	// Pit speed limit in kilometres per hour
-    uint8           m_gamePaused;                // Whether the game is paused
+    uint8           m_gamePaused;                // Whether the game is paused â€“ network game only
     uint8           m_isSpectating;        	// Whether the player is spectating
     uint8           m_spectatorCarIndex;  	// Index of the car being spectated
     uint8           m_sliProNativeSupport;	// SLI Pro support, 0 = inactive, 1 = active
@@ -45,4 +46,9 @@ struct PacketSessionData
     uint8           m_DRSAssist;                 // 0 = off, 1 = on
     uint8           m_dynamicRacingLine;         // 0 = off, 1 = corners only, 2 = full
     uint8           m_dynamicRacingLineType;     // 0 = 2D, 1 = 3D
+    uint8           m_gameMode;                  // Game mode id - see appendix
+    uint8           m_ruleSet;                   // Ruleset - see appendix
+    uint32          m_timeOfDay;                 // Local time of day - minutes since midnight
+    uint8           m_sessionLength;             // 0 = None, 2 = Very Short, 3 = Short, 4 = Medium
+// 5 = Medium Long, 6 = Long, 7 = Full
 };
